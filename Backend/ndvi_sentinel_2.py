# -*- coding: utf-8 -*-
# get 16-day compose NDVI timeseries
"""NDVI_sentinel-2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16pdWP_77b8O6zw4B-MEsPy6xUmjKjNuK
"""

!pip install geemap
!pip install -U google-api-python-client
!pip install pycrs
!pip install ffmpeg-python
!pip install imageio

import imageio
import matplotlib.pyplot as plt
from google.colab import files
from matplotlib.backends.backend_agg import FigureCanvasAgg as FigureCanvas
import ee
import geemap
import folium
import pandas as pd
import geopandas as gpd
import os
import numpy as np
from datetime import datetime, timedelta
import warnings
import time

from google.colab import drive
drive.mount('/content/drive')

# GEE authenticate
ee.Authenticate()
ee.Initialize(project='canvas-radio-444702-k2')

warnings.filterwarnings('ignore', message='Attention required for COPERNICUS/S2_SR_HARMONIZED')

region = ee.FeatureCollection('TIGER/2018/States') \
           .filter(ee.Filter.eq('NAME', 'California')) \
           .geometry()
start_date = '2024-01-01'
end_date = '2024-12-31'

# load sentinel-2
def mask_s2_sr(img):
    qa = img.select('QA60')
    cloud  = qa.bitwiseAnd(1<<10).eq(0)
    cirrus = qa.bitwiseAnd(1<<11).eq(0)
    return img.updateMask(cloud.And(cirrus))

def add_ndvi(img):
    ndvi = img.normalizedDifference(['B8', 'B4']).rename('NDVI')
    return ndvi.copyProperties(img, ['system:time_start'])

s2 = (
    ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED')
        .filterDate(start_date, end_date)
        .filterBounds(region)
        .map(mask_s2_sr)
        .map(add_ndvi)
        .select('NDVI')
     )

def composite16(date_str):
    d0 = ee.Date(date_str)
    d1 = d0.advance(16, 'day')
    comp = s2.filterDate(d0, d1).median()\
             .set('system:time_start', d0.millis())
    return comp

dates = pd.date_range(start_date, end_date, freq='16D') \
          .strftime('%Y-%m-%d').tolist()

#Use composite16 to process each date and combine them into a new EE set
composites = [composite16(d) for d in dates]
col16d = ee.ImageCollection(composites)

vis_params = {
  'min': 0.0, 'max': 1.0,
  'palette': ['ffffff','ffeda0','feb24c','f03b20','bd0026']
}
col_rgb = col16d.map(lambda img: img.visualize(**vis_params))

# === CELL 4: 后台导出 MP4 到 Google Drive ===
task = ee.batch.Export.video.toDrive(
    collection=col_rgb,
    description='CA16d_NDVI_RGB',
    folder='gee_exports',
    fileNamePrefix='ca_ndvi16d_rgb',
    framesPerSecond=2,
    region=region,
    scale=500,
    crs='EPSG:4326'
)
task.start()
print("submit task, check task status in: https://code.earthengine.google.com/tasks ")

# copy path
!cp "/content/drive/My Drive/GEOG573/GEE_Exports/ca_ndvi16d_rgb.mp4" .

# convert to gif
from moviepy.editor import VideoFileClip
clip = VideoFileClip('ca_ndvi16d_rgb.mp4')

clip.write_gif('ca_ndvi16d_rgb.gif', fps=2)

from google.colab import files
files.download('ca_ndvi16d_rgb.gif')





